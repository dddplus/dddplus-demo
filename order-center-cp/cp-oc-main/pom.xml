<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>order-center-cp</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>cp-oc-main</artifactId>
    <name>DDDplus :: Demo :: CP :: Main</name>

    <dependencies>
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>cp-oc-controller</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 把pattern包静态打进来，partner包通过profile动态打包 -->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>order-center-pattern</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 中台把Plugin需要的第三方都准备好，Plugin pom以provided scope引入 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- 把支撑域的实现包加载进来 -->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>order-center-stock-infrastructure</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <artifactId>log4j-core</artifactId>
            <groupId>org.apache.logging.log4j</groupId>
            <version>2.17.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.13.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>2.13.2</version>
        </dependency>

        <!-- json for SpringMVC -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- the Jety web container -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>dddplus-demo</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.example.cp.oms.OrderServer</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.tooling</resource>
                                </transformer>
                            </transformers>
                            <artifactSet>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>demo</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- Plugin包按profile进行动态打包，例如：国际包，主站包 -->
            <dependencies>
                <dependency>
                    <groupId>org.example</groupId>
                    <artifactId>order-center-bp-isv</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.example</groupId>
                    <artifactId>order-center-bp-ka</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>plugin</id>
            <dependencies>
                <!-- plugin profile下，bp jar都不静态引入，而是靠Container进行动态加载 -->
            </dependencies>
        </profile>
    </profiles>

</project>
